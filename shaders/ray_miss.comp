#version 450
#pragma shader_stage(compute)

#include "wavefront_common.glsl"

layout(set = 0, binding = 1) buffer AccumulatorBuffer
{
	vec4 accumulator[];
};

layout(set = 1, binding = 2) buffer MissRayBuffer
{
	uint counter;
	Ray rays[];
} missRayStack;

layout(local_size_x = 1, local_size_y = 1) in;

const vec3 skyA = vec3(1);
const vec3 skyB = vec3(0.2, 0.7, 0.9);

void main()
{
	// TODO: add check for empty stack -> nothing to do
	atomicAdd(missRayStack.counter, -1);
	Ray ray = missRayStack.rays[missRayStack.counter];

	float alpha = 0.5 * (1.0 + ray.direction.y);
	vec3 skyColor = alpha * skyB + (1.0 - alpha) * skyA;
	accumulator[ray.pixelIdx] += vec4(skyColor, 1);
}
