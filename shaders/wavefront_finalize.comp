#version 450
#pragma shader_stage(compute)

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 1) uniform FrameState
{
	uint samplesPerFrame;
	uint totalSamples;
} frameState;

layout(set = 0, binding = 2) buffer AccumulatorBuffer	{ vec4 accumulator[]; };
layout(set = 0, binding = 3, rgba8) uniform image2D outputImage;

void main()
{
	uint pixelIdx = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * (gl_NumWorkGroups.x * gl_WorkGroupSize.x);
	float invSamples = 1.0 / frameState.totalSamples;
	vec4 outColor = accumulator[pixelIdx] * invSamples;

	imageStore(
		outputImage,
		ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y),
		outColor
	);
}
