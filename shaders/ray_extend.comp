#version 450
#pragma shader_stage(compute)

#include "wavefront_common.glsl"

layout(set = 1, binding = 0) buffer RayBuffer
{
	uint counter;
	Ray rays[];
} rayStack;

layout(set = 1, binding = 1) buffer HitRayBuffer
{
	uint counter;
	Ray rays[];
} hitRayStack;

layout(set = 1, binding = 2) buffer MissRayBuffer
{
	uint counter;
	Ray rays[];
} missRayStack;

layout(local_size_x = 16, local_size_y = 16) in;

void main()
{
	if (rayStack.counter == 0)
		return;

	Ray currRay = rayStack.rays[atomicAdd(rayStack.counter, -1) - 1];
	// TODO: intersect w/ TLAS & BLAS in scene
	
	missRayStack.rays[atomicAdd(missRayStack.counter, 1)] = currRay;
}
